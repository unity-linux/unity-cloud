sudo: required
language: bash
services:
  - docker
install: true

before_install:
  - openssl aes-256-cbc -K $encrypted_d91c90adac2d_key -iv $encrypted_d91c90adac2d_iv -in .stuff.tar.gz.enc -out stuff.tar.gz -d
  - file stuff.tar.gz
  - tar xzvf stuff.tar.gz -C /tmp/
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/stuff/.deploy
  - ssh-add /tmp/stuff/.deploy
  - mv /tmp/stuff/.host ~/.ssh/config
  - sudo apt-get install qemu-utils kpartx parted

script:
  - docker build -t cloud .
  - docker create --name=cloud cloud
  - echo $(docker images | awk '{print $7}' | grep -m1 [0-9])
  - sudo fallocate -l 2G unity-cloud_raw.img
  - ls -lha unity-cloud_raw.img
  - sudo parted --script unity-cloud_raw.img mklabel msdos mkpart p ext2 1 100% set 1 boot on
  - sudo kpartx -av unity-cloud_raw.img
  - sleep 5
  - sudo mke2fs -t ext2 /dev/mapper/loop0p1
  - UUID=$(uuidgen)
  - sudo tune2fs /dev/mapper/loop0p1 -U ${UUID}
  - BLK_PART=$(sudo blkid /dev/mapper/loop0p1)
  - echo ${UUID}
  - echo ${BLK_PART}
  - mkdir ./mnt
  - sudo mount /dev/mapper/loop0p1 ./mnt
  - df -h
  - docker export cloud | sudo tar x -C ./mnt
  - sudo mount -t proc none ./mnt/proc
  - sudo mount -o bind /dev ./mnt/dev
  - sudo mount -t sysfs sys ./mnt/sys
  - sudo mkdir -p ./mnt/boot/grub2
  - sudo chroot ./mnt/ /bin/bash -c 'echo "(hd0) /dev/loop0" > /boot/grub2/device.map'
  - sudo chroot ./mnt/ /bin/bash -c 'grub2-install --no-floppy --grub-mkdevicemap=/boot/grub2/device.map --root-directory=/ /dev/loop0'
  - sudo chroot ./mnt/ /bin/bash -c 'su - -c "grub2-mkconfig -o /boot/grub2/grub.cfg"'
  - sudo chroot ./mnt/ /bin/bash -c "sed -i \"s%/dev/mapper/loop0p1 ro%UUID=${UUID} rw audit=0 console=tty1 console=ttyS0,115200n8%g\" /boot/grub2/grub.cfg"
  - sudo umount ./mnt/proc
  - sudo umount ./mnt/dev
  - sudo umount ./mnt/sys
  - sudo umount ./mnt
  - sudo kpartx -dv unity-cloud_raw.img
  - IMG=$(find ~/ -name *.img)
  - qemu-img convert -c -f raw -O qcow2 $IMG ./unity-cloud_qcow2.qcow2
  - xz -9 $IMG &
  - while ps ax | grep xz | grep -v grep > /dev/null ; do sleep 60 ; export x="$(($x+1))" ; echo "--==|Compression has been running for $x minute(s)|==--" ; done
  - IMGXZ=$(find ~/ -name *.img.xz)
  - IMGQCOW=$(find ~/ -name *.qcow2)
  - mkdir ./build_cloud
  - mv $IMGXZ ./build_cloud/
  - mv $IMGQCOW ./build_cloud/

after_success:
  - rsync -arz --progress --delete --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./build_cloud foobar2:public_html/pub/isos/ &
  - rsync -arz --progress --delete --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./build_cloud foobar:/var/www/html/isos/ &
  - wait %1 %2
